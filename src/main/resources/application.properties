#server.port=80

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true
# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true
# MySQL 을 사용할 것.
spring.jpa.database=mysql
# MySQL 설정
spring.datasource.url=jdbc:mysql://ucandoit.cwsebnjtmuw6.ap-northeast-2.rds.amazonaws.com:3306/doit?useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
spring.datasource.username=admin
spring.datasource.password=endltWkdWkd
<<<<<<< HEAD

#spring.datasource.url=jdbc:mysql://localhost:3306/GANZI?useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
#spring.datasource.username=roots
#spring.datasource.password=1234


>>>>>>> 75e5a6f38029a3ce67fdc5620b3d5c3e9b785ad8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

jwt.secret = jwtsecretdoit